% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hstore.R
\name{agg}
\alias{agg}
\alias{\%->>\%}
\alias{\%?\%}
\alias{\%?&\%}
\alias{\%?|\%}
\alias{\%-\%}
\title{hstore/jsonb operations}
\usage{
agg \%->>\% y

agg \%?\% key

agg \%?&\% key

agg \%?|\% key

agg \%-\% key
}
\arguments{
\item{key}{Character string containing an \code{hstore} key.}

\item{hstore}{Name of a database column containing the \code{hstore} data type.}
}
\value{
A character string of class \code{sql}.
}
\description{
Due to the way \code{dbplyr} translates infix operators, there is a number
of operators you can use to control Postgres/PostGIS queries. Some useful
ones include:

\itemize{
 \item{\code{\%->>\%}: Extract keys \code{y} from jsonb \code{x}}
 \item{\code{\%?\%}: Check if key \code{y} is in hstore \code{x}}
 \item{\code{\%?&\%}: Check if all keys \code{y} are in hstore \code{x}}
 \item{\code{\%?|\%}: Check if any keys \code{y} are in hstore \code{x}}
 \item{\code{\%-\%}: Remove a key \code{y} from hstore \code{x}}
}

Note that in order to use (non-infix) functions, you need to inject them
using \code{\link[rlang:!!]{!!}}.
}
\examples{
library(dplyr)

pp_tbl("point") |>
  mutate(amenity = tags \%->>\% 'amenity', phone = tags \%->>\% 'phone')
  filter(amenity == "fast_food" & way \%&&\% !!pg_bbox(bbox)) |>
  select(name, way, phone)
}
