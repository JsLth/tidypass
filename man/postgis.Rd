% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postgis.R
\name{postgis}
\alias{postgis}
\alias{pg_geom}
\alias{pg_bbox}
\alias{\%&&\%}
\alias{\%<->\%}
\title{PostGIS utilities}
\usage{
pg_geom(x)

pg_bbox(x)

x \%&&\% y

x \%<->\% y
}
\arguments{
\item{x}{A \code{\link[sf:st_sfc]{sfc}} object or an object coercible to
\code{sfc}.}
}
\value{
Objects of class \code{call}.
}
\description{
\code{dbplyr} does not recognize PostGIS commands by default. These functions
fill this gap by providing simple wrappers that translate sf to PostGIS.
These functions return calls and are designed to be used inside a tidy
evaluation context.

Currently supported:

\itemize{
 \item{\code{pg_geom}: Create a PostGIS geometry from an \code{sfc} object (\code{st_geomfromtext})}
 \item{\code{pg_bbox}: Compute a PostGIS boundary box from an \code{sfc} object (\code{st_makebox2d})}
 \item{\code{\%&&\%}: Check if bbox of \code{x} intersects with bbox of \code{y}}
 \item{\code{\%<->\%}: Returns the Euclidean distance between \code{x} and \code{y}}
}

Note that in order to use any of these functions inside a dplyr query, you
need to inject them using the \code{\link[rlang]{!!}}. To use PostGIS
operators (e.g. \code{&&}, \code{&>} or \code{>>}), wrap them as infix
operators, i.e.

\preformatted{way \%&&\% {!!pg_bbox(geometry)}}
}
\examples{
library(sf)
nc <- system.file("shape/nc.shp", package = "sf")

pg_geom(nc[1,])
pg_bbox(nc)
}
