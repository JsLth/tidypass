% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hstore.R
\name{hs_values}
\alias{hs_values}
\alias{hs_exists}
\alias{hs_all}
\alias{hs_any}
\alias{hs_delete}
\alias{hs_zip}
\alias{hs_keyvalue}
\title{hstore operations}
\usage{
hs_values(x, y)

hs_exists(x, y)

hs_all(x, y)

hs_any(x, y)

hs_delete(x, y)

hs_zip(x)

hs_keyvalue(x)
}
\arguments{
\item{x}{Left-hand side operator}

\item{y}{Right-hand side operator}
}
\value{
A character string of class \code{sql}.
}
\description{
Helper functions to work with hstores in \code{dbplyr} queries. In Postpass,
all undefined tags are stored in a hstore can be queried using hstore
operations.

Currently supported:

\itemize{
 \item{\code{hs_values}: Returns the values of given keys (\code{->})}
 \item{\code{hs_exists}: Checks if a key exists in an hstore (\code{?})}
 \item{\code{hs_all}: Checks if all specified keys exist in an hstore (\code{?&})}
 \item{\code{hs_all}: Checks if any specified keys exist in an hstore (\code{?|})}
 \item{\code{hs_delete}: Deletes a key from an hstore (\code{-})}
 \item{\code{hs_zip}: Interweaves keys and values in an array (\code{\%\%})}
 \item{\code{hs_keyvalue}: Converts an hstore to a 2D key-value array (\code{\%#})}
}
}
\examples{
# example code

}
